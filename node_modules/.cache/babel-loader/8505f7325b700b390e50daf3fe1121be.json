{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documentos/Pedro/Programa\\xE7\\xE3o/Front/Projetos/gitProject/apiGitHub/src/components/InputPage/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FiSearch } from 'react-icons/fi';\nimport api from '../../services/api';\nimport { Section, LogoImage, HeaderSectionContainer, HeaderSection, HeaderTitle, HeaderInputContainer, HeaderInput, Error, HeaderSearchButton } from './styles';\nimport { context } from '../../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = () => {\n  _s();\n\n  const ctx = useContext(context);\n  const history = useHistory();\n\n  async function getApiData() {\n    try {\n      const response = await api.get(`${ctx.search}`);\n      const repos = await api.get(`${ctx.search}/repos`);\n      const followers = await api.get(`${ctx.search}/followers`);\n      const following = await api.get(`${ctx.search}/following`);\n      ctx.SetUserData(response.data);\n      ctx.SetRepos(repos.data);\n      ctx.SetFollowers(followers.data);\n      ctx.SetFollowing(following.data);\n      ctx.setHasError(false);\n      ctx.setLoggedUser(true);\n      console.log(history);\n      history.push('/Home');\n    } catch (err) {\n      ctx.setHasError(true);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: /*#__PURE__*/_jsxDEV(HeaderSectionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(LogoImage, {\n        src: 'https://image.flaticon.com/icons/png/512/25/25657.png',\n        alt: \"Logo do GitHub\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HeaderSection, {\n        children: [/*#__PURE__*/_jsxDEV(HeaderTitle, {\n          children: \"Digite o nome do usu\\xE1rio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(HeaderInputContainer, {\n          children: [/*#__PURE__*/_jsxDEV(HeaderInput, {\n            placeholder: \"Digite o usuário...\",\n            value: ctx.search,\n            onChange: e => ctx.SetSearch(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), ctx.hasError && /*#__PURE__*/_jsxDEV(Error, {\n            children: \"Usu\\xE1rio n\\xE3o encontrado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(HeaderSearchButton, {\n            onClick: () => getApiData(),\n            children: /*#__PURE__*/_jsxDEV(FiSearch, {\n              size: 15\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 1\n  }, this);\n};\n\n_s(Input, \"g2dLzDzlOjmjMCssy3UQpQu9Wr0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/oem/Documentos/Pedro/Programação/Front/Projetos/gitProject/apiGitHub/src/components/InputPage/index.jsx"],"names":["React","useContext","useHistory","FiSearch","api","Section","LogoImage","HeaderSectionContainer","HeaderSection","HeaderTitle","HeaderInputContainer","HeaderInput","Error","HeaderSearchButton","context","Input","ctx","history","getApiData","response","get","search","repos","followers","following","SetUserData","data","SetRepos","SetFollowers","SetFollowing","setHasError","setLoggedUser","console","log","push","err","e","SetSearch","target","value","hasError"],"mappings":"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","sourcesContent":["import React,{useContext} from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { FiSearch } from 'react-icons/fi';\nimport api from '../../services/api'\nimport {\n    Section,\n    LogoImage,\n    HeaderSectionContainer,\n    HeaderSection,\n    HeaderTitle,\n    HeaderInputContainer,\n    HeaderInput,\n    Error,\n    HeaderSearchButton,\n    \n\n} from './styles';\nimport { context } from '../../context';\n\nconst Input = () => {\n    const ctx = useContext(context)\n    const history = useHistory()\n    \n \n\n    async function getApiData(){\n        try {\n            const response = await api.get(`${ctx.search}`)\n            const repos = await api.get(`${ctx.search}/repos`)\n            const followers = await api.get(`${ctx.search}/followers`)\n            const following = await api.get(`${ctx.search}/following`)\n            ctx.SetUserData(response.data)\n            ctx.SetRepos(repos.data)\n            ctx.SetFollowers(followers.data)\n            ctx.SetFollowing(following.data)\n            ctx.setHasError(false)\n            ctx.setLoggedUser(true)\n            console.log(history)\n            history.push('/Home')\n        } catch (err) {\n            ctx.setHasError(true)\n\n        }\n\n    }\n\n\n    return (\n<Section>\n    <HeaderSectionContainer>\n        <LogoImage src={'https://image.flaticon.com/icons/png/512/25/25657.png'} alt={\"Logo do GitHub\"} />\n            <HeaderSection>\n                <HeaderTitle>Digite o nome do usuário:</HeaderTitle>\n                <HeaderInputContainer>\n                        <HeaderInput placeholder={\"Digite o usuário...\"}  value={ctx.search} onChange={e => ctx.SetSearch(e.target.value)} />\n                            {ctx.hasError && <Error>Usuário não encontrado</Error>}\n                        <HeaderSearchButton onClick={()=>getApiData()}>\n                            <FiSearch size={15} />\n                        </HeaderSearchButton>\n                </HeaderInputContainer>\n            </HeaderSection>\n    </HeaderSectionContainer>\n</Section>\n)};\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}